// Generated by CoffeeScript 1.10.0
(function() {
  var add_table, build_table, mode, randomNum, randomise;

  mode = "addition";

  randomNum = function(max, min) {
    if (min == null) {
      min = 1;
    }
    return Math.floor(Math.random() * (max - min) + min);
  };

  randomise = function() {
    var randomNumAlt;
    randomNum = this._randomNum(10);
    return randomNumAlt = this._randomNum(10, 5);
  };

  build_table = function(ligne, colonne) {
    var $html, c, k, l, m, ref, ref1;
    $html = $("<table></table>");
    for (l = k = 0, ref = ligne; 0 <= ref ? k <= ref : k >= ref; l = 0 <= ref ? ++k : --k) {
      $html.append("<tr id='row" + l + "'></tr>");
      for (c = m = 0, ref1 = colonne; 0 <= ref1 ? m <= ref1 : m >= ref1; c = 0 <= ref1 ? ++m : --m) {
        switch (mode) {
          case "addition":
            $html.find("#row" + l).append("<td id='col" + l + "' data-val='" + (l + c) + "'>" + ((l === 0) || (c === 0) ? l + c : '') + "</td>");
            break;
          case "multiplication":
            $html.find("#row" + l).append("<td id='col" + l + "' data-val='" + (l * c) + "'>" + ((l === 0) || (c === 0) ? l + c : '') + "</td>");
        }
      }
    }
    return $html;
  };

  add_table = function() {
    var $table, i, j, k, m;
    $table = build_table(9, 9);
    $("#" + mode + " #table").empty().append($table.html());
    $("#" + mode + " #jetons").empty();
    for (i = k = 1; k <= 9; i = ++k) {
      for (j = m = 1; m <= 9; j = ++m) {
        switch (mode) {
          case "addition":
            $("#" + mode + " #jetons").append("<div class='jeton' data-val='" + (i + j) + "'>" + (i + j) + "</div>");
            break;
          case "multiplication":
            $("#" + mode + " #jetons").append("<div class='jeton' data-val='" + (i * j) + "'>" + (i * j) + "</div>");
        }
      }
    }
    switch (mode) {
      case "addition":
        $("#" + mode + " tr#row" + 0. + " td:nth-child(" + 1. + ")").html("+");
        break;
      case "multiplication":
        $("#" + mode + " tr#row" + 0. + " td:nth-child(" + 1. + ")").html("Ã—");
    }
    $(".jeton").draggable({
      helper: "clone",
      cursor: "move",
      appendTo: "body",
      containment: "document",
      start: function() {
        return $(this).hide();
      },
      stop: function() {
        return $(this).show();
      }
    });
    return $("#" + mode + " td, #jetons").droppable({
      hoverClass: "hoverDrop",
      tolerance: "pointer",
      drop: function(event, ui) {
        return $(this).append(ui.draggable);
      }
    });
  };

  $(function() {
    add_table();
    $(".check").on("click", function() {
      $(".green").toggleClass("black green");
      $(".red").toggleClass("black red");
      return $("#" + mode + " td").each(function() {
        var cell, jeton;
        if ($(this).find(".jeton").length === 1) {
          cell = $(this).attr("data-val");
          jeton = $(this).find(".jeton").attr("data-val");
          if (cell !== jeton) {
            return $(this).removeClass("black").addClass("red");
          } else {
            return $(this).removeClass("black").addClass("green");
          }
        }
      });
    });
    $("#add_table").on("click", function() {
      mode = "addition";
      $(".article").hide();
      $("#post_addition").show();
      return add_table();
    });
    $("#mult_table").on("click", function() {
      mode = "multiplication";
      $(".article").hide();
      $("#post_multiplication").show();
      return add_table();
    });
    $(".random").on("click", function() {
      var $cell, c, i, k, l, ref, results;
      $("#" + mode + " .black").removeClass("black");
      results = [];
      for (i = k = 1; k <= 10; i = ++k) {
        while (true) {
          ref = [randomNum(11, 2), randomNum(11, 2)], l = ref[0], c = ref[1];
          $cell = $("#" + mode + " tr#row" + l + " td:nth-child(" + c + ")");
          if (!$cell.hasClass("black")) {
            break;
          }
        }
        results.push($cell.addClass("black"));
      }
      return results;
    });
    return $(".correction").on("click", function() {
      var $cell, c, k, l, results;
      $(".black, .green, .red").removeClass("black green red");
      $(".jeton").each(function() {
        return $(this).appendTo($("#jetons"));
      });
      results = [];
      for (l = k = 1; k <= 10; l = ++k) {
        results.push((function() {
          var m, results1;
          results1 = [];
          for (c = m = 1; m <= 10; c = ++m) {
            $cell = $("#" + mode + " tr#row" + l + " td:nth-child(" + (c + 1) + ")");
            switch (mode) {
              case "addition":
                results1.push($cell.append($("#" + mode + " #jetons .jeton[data-val='" + (l + c) + "']:first()")));
                break;
              case "multiplication":
                results1.push($cell.append($("#" + mode + " #jetons .jeton[data-val='" + (l * c) + "']:first()")));
                break;
              default:
                results1.push(void 0);
            }
          }
          return results1;
        })());
      }
      return results;
    });
  });

}).call(this);
